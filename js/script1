

const generateAuthors = function generateAuthors(){

 /* [NEW] create a new variable allTags with an empty object */
 let allAuthors = [];

  /* find all articles */

  const articles = document.querySelectorAll(optArticleSelector);

  /* START LOOP: for every article: */
  for( let article of articles){

  /* find author wrapper */

  let authorsWraper = article.querySelector(optArticleAuthorSelector);
  //console.log('authorWraper', authorWraper);
  authorsWraper.innerHTML = "";

  /* make html variable with empty string */

  let html = '';

  /* get tags from data-author attribute */

  const articleAuthor = article.getAttribute('data-author');
  //console.log( 'articleAuthor ', articleAuthor );


  /* generate HTML of the link */

  const authorHTML = '<li><a href="#author-' + articleAuthor + '"<span>' + ' '  + articleAuthor+ '</span></a></li>';
  //console.log ( ' author link: ', authorHTML);

  /* add generated code to html variable */

  html = html + authorHTML;

  //console.log('html author ', html);

/* [NEW] check if this link is NOT already in allTags */
if(allAuthors.indexOf(authorHTML) == -1){
  /* [NEW] add generated code to allTags array */
  allAuthors.push(authorHTML);
}



   /* insert HTML of all the links into the author wrapper */
  authorsWraper.innerHTML = html;

  const authorList = document.querySelector(optAuthorsListSelector);


/* Start -  function call calculateTagsParams */

const authorsParams = calculateTagsParams(allAuthors);
console.log('authorParam:', authorsParams)

/* End call function calculateTagsParams*/

  /* [NEW] create variable for all links HTML code */

let allAuthorsHTML = '';


 /* [NEW] START LOOP: for each tag in allTags: */
for(let author in allAuthors){

  const authorLinkHTML = `<li><a class="${calculateTagClass(
    allAuthors[author],
    authorsParams
  )}" href="#author-${author}">${author}</a></li>`;
  //console.log('tagLinkHTML:', tagLinkHTML);

  allAuthorsHTML += authorLinkHTML;
  /* [NEW] END LOOP: for each tag in allTags: */

}
/*[NEW] add HTML from allTagsHTML to tagList */
authorList.innerHTML = allAuthorsHTML;

  }

}

generateAuthors();
